//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamLink.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.6.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The settings change was unsuccessful because system is DualView capable.")]
        public string InvalidOperation_Disp_Change_BadDualView {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_BadDualView"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("An invalid set of flags was passed in.")]
        public string InvalidOperation_Disp_Change_BadFlags {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_BadFlags"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The graphics mode is not supported.")]
        public string InvalidOperation_Disp_Change_BadMode {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_BadMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("An invalid parameter was passed in. This can include an invalid flag or combinati" +
            "on of flags.")]
        public string InvalidOperation_Disp_Change_BadParam {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_BadParam"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The display driver failed the specified graphics mode.")]
        public string InvalidOperation_Disp_Change_Failed {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_Failed"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Unable to write settings to the registry.")]
        public string InvalidOperation_Disp_Change_NotUpdated {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_NotUpdated"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The computer must be restarted in order for the graphics mode to work.")]
        public string InvalidOperation_Disp_Change_Restart {
            get {
                return ((string)(this["InvalidOperation_Disp_Change_Restart"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Fatal error.")]
        public string InvalidOperation_FatalError {
            get {
                return ((string)(this["InvalidOperation_FatalError"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Your about to change display settings to\r\n{0}\r\nAre you sure you want to continue?" +
            "")]
        public string Msg_Disp_Change {
            get {
                return ((string)(this["Msg_Disp_Change"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You are about to close the application. Are you sure you want to change screen se" +
            "ttings to its original state?\r\n{0}")]
        public string Msg_Disp_Change_Original {
            get {
                return ((string)(this["Msg_Disp_Change_Original"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Are you sure you want to reset screen settings to its original state?\r\n{0}")]
        public string Msg_Disp_Change_Reset {
            get {
                return ((string)(this["Msg_Disp_Change_Reset"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Are you sure you want to rotate the screen?")]
        public string Msg_Disp_Change_Rotate {
            get {
                return ((string)(this["Msg_Disp_Change_Rotate"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("The settings change was successful.")]
        public string Msg_Disp_Change_Successful {
            get {
                return ((string)(this["Msg_Disp_Change_Successful"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("steamwebhelper")]
        public string Value_ProcessName {
            get {
                return ((string)(this["Value_ProcessName"]));
            }
            set {
                this["Value_ProcessName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Big Picture")]
        public string Value_TitleName {
            get {
                return ((string)(this["Value_TitleName"]));
            }
            set {
                this["Value_TitleName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int Value_Selected_Resolution {
            get {
                return ((int)(this["Value_Selected_Resolution"]));
            }
            set {
                this["Value_Selected_Resolution"] = value;
            }
        }
    }
}
